{"version":3,"sources":["webpack:///./node_modules/@angular/compiler/src sync","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Modal/user-address/user-address.component.css","webpack:///./src/app/Modal/user-address/user-address.component.html","webpack:///./src/app/Modal/user-address/user-address.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/modal/addressDetails/addressDetails.Modal.ts","webpack:///./src/app/modal/addressDetails/addressDetails.modal.html","webpack:///./src/app/modal/user-detail-modal/user-detail.modal.css","webpack:///./src/app/modal/user-detail-modal/user-detail.modal.html","webpack:///./src/app/modal/user-detail-modal/user-detail.modal.ts","webpack:///./src/app/pagenotfound/pagenotfound.component.css","webpack:///./src/app/pagenotfound/pagenotfound.component.html","webpack:///./src/app/pagenotfound/pagenotfound.component.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.scss","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/user-detail/user-detail.component.html","webpack:///./src/app/user-detail/user-detail.component.scss","webpack:///./src/app/user-detail/user-detail.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/validate/validate.component.css","webpack:///./src/app/validate/validate.component.html","webpack:///./src/app/validate/validate.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/address.ts","webpack:///./src/models/city.ts","webpack:///./src/models/country.ts","webpack:///./src/models/district.ts","webpack:///./src/models/user.ts","webpack:///./src/services/address/address.service.ts","webpack:///./src/services/users/user.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src sync recursive\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".btn-action{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">CREATE ACCOUNT</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form novalidate [formGroup]=\\\"formUsers\\\" (ngSubmit)=\\\"createUser()\\\">\\n      <table class=\\\"table table-borderless\\\">\\n        <tbody>\\n          <tr>\\n            <th>User name*</th>\\n            <td>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"Username is at least 2 characters\\\">\\n              <app-validate [control]=\\\"formUsers.controls.username\\\" [namecontrol]=\\\"Username\\\"></app-validate>\\n            </td>\\n          </tr>\\n          <tr>\\n            <th>Password*</th>\\n            <td>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password is at least 5 characters\\\">\\n            </td>\\n          </tr>\\n          <tr>\\n            <th>Phone Number</th>\\n            <td>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">\\n            </td>\\n          </tr>\\n          <tr>\\n            <th>Email</th>\\n            <td>\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Ex: a@b.c\\\">\\n              <!-- <app-validate [control]=\\\"formUsers.controls.email\\\" [name-control]=\\\"email\\\"></app-validate> -->\\n            </td>\\n          </tr>\\n          <!-- <tr>\\n            <th>Day of Birth</th>\\n            <td>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newBirthday\\\" name=\\\"day\\\">\\n            </td>\\n          </tr> -->\\n        </tbody>\\n      </table>\\n      <fieldset formGroupName=\\\"addressHome\\\">\\n        <div id=\\\"accordion\\\">\\n          <div class=\\\"card\\\">\\n            <a class=\\\"card-header card-link\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseOne\\\">\\n              Home address\\n              <img src=\\\"../../assets/images/expandmore.png\\\">\\n            </a>\\n            <div id=\\\"collapseOne\\\" class=\\\"collapse\\\" data-parent=\\\"#accordion\\\">\\n              <div class=\\\"card-body\\\">\\n                <table class=\\\"table table-borderless\\\">\\n                  <tbody>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">Country</th>\\n                      <td>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"idCountry_Home\\\" (change)=\\\"getCitiesFromId_Home($event.target.value)\\\">\\n                          <option [value]=\\\"0\\\">Select country</option>\\n                          <option *ngFor=\\\"let ctr of countryData_Home.countries\\\" [value]=\\\"ctr.id\\\">{{ ctr.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">City</th>\\n                      <td>\\n                        <select id=\\\"my-input\\\" class=\\\"form-control\\\" formControlName=\\\"idCity_Home\\\" (change)=\\\"getDistrictsFromId_Home($event.target.value)\\\">\\n                          <option [value]=\\\"0\\\">Select city</option>\\n                          <option *ngFor=\\\"let ct of cityData_Home.cities\\\" [value]=\\\"ct.id\\\">{{ ct.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">District</th>\\n                      <td>\\n                        <select id=\\\"my-input\\\" class=\\\"form-control\\\" formControlName=\\\"idDistrict_Home\\\">\\n                          <option [value]=\\\"0\\\">Select district</option>\\n                          <option *ngFor=\\\"let d of districtData_Home.districts\\\" [value]=\\\"d.id\\\">{{ d.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <th>Street</th>\\n                      <td>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"newStreet_Home\\\">\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </fieldset>\\n\\n      <fieldset formGroupName=\\\"addressWork\\\">\\n        <div id=\\\"accordion\\\">\\n          <div class=\\\"card\\\">\\n            <a class=\\\"card-header card-link\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseWork\\\">\\n              Work address\\n              <img src=\\\"../../assets/images/expandmore.png\\\">\\n            </a>\\n            <div id=\\\"collapseWork\\\" class=\\\"collapse\\\" data-parent=\\\"#accordion\\\">\\n              <div class=\\\"card-body\\\">\\n                <table class=\\\"table table-borderless\\\">\\n                  <tbody>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">Country</th>\\n                      <td>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"idCountry_Work\\\" (change)=\\\"getCitiesFromId_Work($event.target.value)\\\">\\n                          <option [value]=\\\"0\\\">Select country</option>\\n                          <option *ngFor=\\\"let ctr of countryData_Work.countries\\\" [value]=\\\"ctr.id\\\">{{ ctr.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">City</th>\\n                      <td>\\n                        <select id=\\\"my-input\\\" class=\\\"form-control\\\" formControlName=\\\"idCity_Work\\\" (change)=\\\"getDistrictsFromId_Work($event.target.value)\\\">\\n                          <option [value]=\\\"0\\\">Select city</option>\\n                          <option *ngFor=\\\"let ct of cityData_Work.cities\\\" [value]=\\\"ct.id\\\">{{ ct.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr class=\\\"form-group\\\">\\n                      <th for=\\\"my-input\\\">District</th>\\n                      <td>\\n                        <select id=\\\"my-input\\\" class=\\\"form-control\\\" formControlName=\\\"idDistrict_Work\\\">\\n                          <option [value]=\\\"0\\\">Select district</option>\\n                          <option *ngFor=\\\"let d of districtData_Work.districts\\\" [value]=\\\"d.id\\\">{{ d.name }}</option>\\n                        </select>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <th>Street</th>\\n                      <td>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"newStreet_Work\\\">\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </fieldset>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" [disabled]=\\\"formUsers.invalid\\\">Save</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"btn-action\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"open(content)\\\">ADD USER</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AddressService } from '../../../services/address/address.service';\nimport { CountryData } from '../../../models/country';\nimport { User } from '../../../models/user';\nimport { Address } from '../../../models/address';\nimport { CityData } from '../../../models/city';\nimport { DistrictData } from '../../../models/district';\n\n@Component({\n  selector: 'app-user-address',\n  templateUrl: './user-address.component.html',\n  styleUrls: ['./user-address.component.css']\n})\nexport class UserAddressComponent implements OnInit {\n\n  countryData_Home: CountryData = new CountryData();\n  cityData_Home: CityData = new CityData();\n  districtData_Home: DistrictData = new DistrictData();\n\n  countryData_Work: CountryData = new CountryData();\n  cityData_Work: CityData = new CityData();\n  districtData_Work: DistrictData = new DistrictData();\n\n  formUsers: FormGroup;\n  closeResult: string;\n  constructor(private modalService: NgbModal, private addressService: AddressService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.createForm();\n    this.getCountries_Home();\n    this.getCountries_Work();\n  }\n\n  createForm() {\n    this.formUsers = this.fb.group({\n      username: ['', [\n        Validators.required,\n        Validators.minLength(2)\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(5)\n      ]],\n      phone: [''],\n      email: ['', [\n        Validators.email\n      ]],\n      addressHome: this.fb.group({\n        idCountry_Home: [0],\n        idCity_Home: [0],\n        idDistrict_Home: [0],\n        newStreet_Home: [''],\n      }),\n      addressWork: this.fb.group({\n        idCountry_Work: [0],\n        idCity_Work: [0],\n        idDistrict_Work: [0],\n        newStreet_Work: [''],\n      })\n    });\n  }\n\n  createUser() {\n    let user: User = new User( this.formUsers.get('username').value, this.formUsers.get('password').value );\n    let address: Address = new Address(1,this.formUsers.get('addressHome.idCountry_Home').value,this.formUsers.get('addressHome.idCity_Home').value,this.formUsers.get('addressHome.idDistrict_Home').value,this.formUsers.get('addressHome.newStreet_Home').value);\n    let address2: Address = new Address(2,this.formUsers.get('addressWork.idCountry_Work').value,this.formUsers.get('addressWork.idCity_Work').value,this.formUsers.get('addressWork.idDistrict_Work').value,this.formUsers.get('addressWork.newStreet_Work').value);\n\n    let addresses = [address,address2];\n    return this.addressService.createUserAddress( user, addresses ).subscribe(data =>{\n      window.location.reload();\n    });\n  }\n\n  //Home address\n  getCountries_Home() {\n    return this.addressService.getCountries().subscribe(data => {\n      this.countryData_Home = data;\n\n    });\n  }\n\n  getCitiesFromId_Home(id) {\n    return this.addressService.getCitiesFromId(id).subscribe(data => {\n      this.cityData_Home = data;\n      this.getDistrictsFromId_Home(0);\n      this.formUsers.get('addressHome').patchValue({\n        idCity_Home: 0,\n        idDistrict_Home: 0\n      });\n    });\n  }\n\n  getDistrictsFromId_Home(id) {\n    return this.addressService.getDistrictsFromId(id).subscribe(data => {\n      this.districtData_Home = data;\n    });\n  }\n\n  //Work address\n  getCountries_Work() {\n    return this.addressService.getCountries().subscribe(data => {\n      this.countryData_Work = data;\n    });\n  }\n\n  getCitiesFromId_Work(id) {\n    return this.addressService.getCitiesFromId(id).subscribe(data => {\n      this.cityData_Work = data;\n      this.getDistrictsFromId_Work(0);\n      this.formUsers.get('addressWork').patchValue({\n        idCity_Work: 0,\n        idDistrict_Work: 0\n      });\n    });\n  }\n\n  getDistrictsFromId_Work(id) {\n    return this.addressService.getDistrictsFromId(id).subscribe(data => {\n      this.districtData_Work = data;\n    });\n  }\n\n  open(content) {\n\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', backdrop: \"static\", size: \"lg\" }).result.then((result) => {\n      this.createForm()\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      this.createForm()\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\n//import { CommonModule } from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\n//import các module cần điều hướng\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserDetailComponent } from './user-detail/user-detail.component';\r\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\r\n// import { ContactComponent } from './contact/contact.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  //khai báo route mặc định, tức là khi ko chỉ định path cụ thể thì sẽ mở màn hình này đầu tiên\r\n  {path: '', redirectTo : '/login', pathMatch:'full'},\r\n  //Khai báo các route\r\n  {path: 'home', component : HomeComponent},\r\n  {path: 'login', component : LoginComponent},\r\n  {path: 'user', component : UsersComponent},\r\n  // {path: 'contact', component : ContactComponent},\r\n  //Truyền vào id để xem chi tiết\r\n  {path: 'detail/:id', component : UserDetailComponent},\r\n  //Khi nhập sai link sẽ tự chuyển vào component này (Dòng này phải được đặt cuối cùng của route)\r\n  {path: '**', component : PagenotfoundComponent}\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    //CommonModule,\r\n    RouterModule.forRoot(routes)  //Khởi chạy đầu tiên khi app chúng ta chạy\r\n  ],\r\n  //Không dùng đến declarations\r\n  //declarations: []\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".header{\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    background-color: #4267B2;\\r\\n    padding: 10px 10px;   \\r\\n}\\r\\n.main-body{\\r\\n    clear: both;\\r\\n    background-color: #E9EBEE;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    height: 900px;\\r\\n}\\r\\n.container-body{\\r\\n    \\r\\n    width: 80%;\\r\\n}\\r\\n.side-bar{\\r\\n    clear: both;\\r\\n    float: left;\\r\\n    width: 30%;\\r\\n    /* border-right: 1px solid gray; */\\r\\n    background-color: #E9EBEE;\\r\\n    padding-top: 10px;\\r\\n}\\r\\n.content{\\r\\n    float: right;\\r\\n    width: 70%;\\r\\n    background-color: #E9EBEE;\\r\\n    padding-top: 10px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"getStaticEToken(); else abc\\\">\\r\\n    <div class=\\\"header\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"main-body\\\">\\r\\n        <div class=\\\"container-body\\\">\\r\\n            <div class=\\\"side-bar\\\">\\r\\n                <app-sidebar></app-sidebar>\\r\\n            </div>\\r\\n            <div class=\\\"content\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #abc>\\r\\n        <app-login></app-login>\\r\\n</ng-template>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  static expiredToken: boolean;\r\n\r\n  getStaticEToken() {\r\n    return AppComponent.expiredToken;\r\n}\r\n\r\n  constructor(private token: JwtHelperService) {\r\n    this.checkToken();\r\n  }\r\n\r\n  \r\n\r\n  checkToken() {\r\n    let isExpired;\r\n    try {\r\n      isExpired = this.token.isTokenExpired(localStorage.getItem(\"token\"));\r\n      if(isExpired === true) {\r\n        AppComponent.expiredToken = false;\r\n        console.log(\"token hết hạn\");\r\n      }\r\n      else {\r\n        AppComponent.expiredToken = true;\r\n        console.log(\"token còn hạn\");\r\n      }\r\n    }\r\n    catch(err) {\r\n      AppComponent.expiredToken = false;\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalBasic } from './modal/addressDetails/addressDetails.Modal';\r\nimport { UserDetailModal } from './modal/user-detail-modal/user-detail.modal';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { UserService } from '../services/users/user.service';\r\nimport { AddressService } from '../services/address/address.service';\r\nimport { UserDetailComponent } from './user-detail/user-detail.component';\r\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { UserAddressComponent } from './Modal/user-address/user-address.component';\r\nimport { ValidateComponent } from './validate/validate.component';\r\n// import { ContactComponent } from './contact/contact.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UserDetailComponent,\r\n    PagenotfoundComponent,\r\n    UsersComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    HomeComponent,\r\n\r\n    NgbdModalBasic,\r\n\r\n    UserDetailModal,\r\n\r\n    UserAddressComponent,\r\n\r\n    ValidateComponent,\r\n\r\n    // ContactComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    NgbModalModule,\r\n    AngularFontAwesomeModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return localStorage.getItem(\"token\");\r\n        },\r\n        whitelistedDomains: ['localhost:5000'],\r\n        skipWhenExpired: true\r\n      }    \r\n    })\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    AddressService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">\\r\\n            <img src=\\\"../../assets/images/dxcLogo.svg\\\">\\r\\n            <span>DXC VIETNAM</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <div class=\\\"info\\\">\\r\\n        Hello\\r\\n        <strong>{{ name }}</strong>!\\r\\n        <button class=\\\"logout\\\" (click)=\\\"logoutUser()\\\">Logout</button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".container {\\n  width: 80%; }\\n\\n.info {\\n  float: right;\\n  color: white; }\\n\\n.logout {\\n  color: white;\\n  border: none;\\n  background-color: #4267B2;\\n  border-left: 1px solid black; }\\n\\n.logout :hover {\\n    background-color: #3B5DA0;\\n    border-radius: 5px; }\\n\\n.logo {\\n  float: left;\\n  color: white; }\\n\\n.logo img {\\n    width: 40px;\\n    height: auto;\\n    float: left;\\n    margin-top: -8px; }\\n\\n.logo span {\\n    color: black;\\n    margin-left: 5px;\\n    font-weight: bold;\\n    font-size: 20px;\\n    margin-top: -10px;\\n    float: left; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  name: string = localStorage.getItem(\"user\");\r\n  idUser: number;\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logoutUser() {\r\n    localStorage.removeItem(\"token\");\r\n    AppComponent.expiredToken = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"home\\\">\\r\\n    <p>Welcome to my website!</p>\\r\\n    <video src=\\\"../../assets/video/dxc.mp4\\\" autoplay autobuffer autoloop loop controls></video>\\r\\n</div>\"","module.exports = \".home {\\n  background-color: white;\\n  border-radius: 5px;\\n  height: 450px; }\\n  .home p {\\n    padding-top: 10px;\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold; }\\n  .home video {\\n    margin-left: 35px;\\n    width: 90%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private router: Router,private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    // this.router.navigate(['main']);\r\n    // this.activatedRoute.params['main'];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"login\\\">\\r\\n  \\r\\n  <div class=\\\"frm-login\\\">\\r\\n    <p>{{ status }}</p><br>\\r\\n    <h1>LOGIN</h1>\\r\\n    <form (ngSubmit)=\\\"loginUser()\\\" #form=\\\"ngForm\\\">\\r\\n      <table class=\\\"table table-borderless\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>User name:</td>\\r\\n            <td><input type=\\\"text\\\" required [(ngModel)]=\\\"myName\\\" name=\\\"user\\\" #name=\\\"ngModel\\\" autofocus></td>\\r\\n            <td><div class=\\\"status\\\" *ngIf=\\\"name?.errors?.required && name?.touched\\\">Enter your user name!</div></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Password:</td>\\r\\n            <td><input type=\\\"password\\\" required [(ngModel)]=\\\"myPassword\\\" name=\\\"pass\\\" #pass=\\\"ngModel\\\"></td>\\r\\n            <td><div class=\\\"status\\\" *ngIf=\\\"pass?.errors?.required && pass?.touched\\\">Enter your password!</div></td>\\r\\n          </tr> \\r\\n        </tbody>\\r\\n      </table>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">Login</button><br>\\r\\n    </form>\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".login {\\n  height: 600px;\\n  overflow: hidden;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center; }\\n  .login p {\\n    color: red; }\\n  .status {\\n  color: red; }\\n  input.ng-invalid.ng-touched {\\n  border: 1px solid red; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User, UserData } from '../../models/user';\r\nimport { UserService } from '../../services/users/user.service';\r\nimport { AppComponent } from '../app.component';\r\nimport { Location } from '@angular/common';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  myName: string;\r\n  myPassword: string;\r\n  status: string = \"\";\r\n  userdata: UserData = new UserData();\r\n  constructor(private location: Location, private router: Router, private userService: UserService) {\r\n    \r\n   }\r\n\r\n  ngOnInit() {\r\n    if(localStorage.getItem(\"token\")){\r\n      this.router.navigate(['home']);\r\n    }\r\n    \r\n  }\r\n\r\n  loginUser() {\r\n    //Tạo user truyền 2 tham số nhập vào\r\n    let user: User = new User(this.myName, this.myPassword);\r\n    //Gọi hàm loginUser truyền tham số vào và Subcribe là thực hiện các lệnh\r\n    return this.userService.loginUser(user).subscribe(data => {\r\n      this.userdata = data;\r\n      if(data.status === 0)\r\n        this.status = `error code ${data.status} and error detail: ${data.message}`;\r\n      else {\r\n        localStorage.setItem(\"token\", data[\"token\"]);\r\n        if (localStorage.getItem(\"token\") != \"\") {\r\n          localStorage.setItem(\"user\", this.myName);\r\n          this.router.navigate(['home']);\r\n          AppComponent.expiredToken = true;\r\n        }\r\n        else {\r\n          this.status = this.userdata.error.message;\r\n        }\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n}\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddressService } from '../../../services/address/address.service'\r\nimport { Address } from '../../../models/address'\r\nimport { Country } from '../../../models/country'\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms'\r\nimport { Action } from 'rxjs/internal/scheduler/Action';\r\n\r\n\r\n@Component({\r\n  selector: 'ngbd-modal-basic',\r\n  templateUrl: './addressDetails.modal.html'\r\n})\r\nexport class NgbdModalBasic implements OnInit  {\r\n  closeResult: string;\r\n\r\n  @Input() modalUDId: number;\r\n\r\n  @Input() userId: number;\r\n  @Input() modalType: string;\r\n\r\n  addressIds: Address;\r\n  addressTypes: any;\r\n  countries: Array<Country>;\r\n  cities: any;\r\n  districts: any;\r\n\r\n  @Output() _addressDetail = new EventEmitter<object>();\r\n  public formUsers: FormGroup;\r\n  \r\n  constructor(private modalService: NgbModal, private data: AddressService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(){\r\n    if(this.modalType === 'edit')\r\n      this.getUserAddressOfId();\r\n    else if(this.modalType === 'add') {\r\n      this.addressIds = new Address();\r\n      this.getAddressType();\r\n      this.getCountry();\r\n      this.createForm();\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.formUsers = this.fb.group({\r\n      id: [this.modalUDId],\r\n      addressTypeId: [this.addressIds.addressTypeId,[\r\n        Validators.required\r\n      ]],\r\n      countryId: [this.addressIds.countryId,[\r\n        Validators.required\r\n      ]],\r\n      cityId: [this.addressIds.cityId,[\r\n        Validators.required\r\n      ]],\r\n      districtId: [this.addressIds.districtId,[\r\n        Validators.required\r\n      ]],\r\n      street: [this.addressIds.street,[\r\n        Validators.required\r\n      ]]\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  getUserAddressOfId() {\r\n    this.data.AgetAddressFromId(this.modalUDId).subscribe(\r\n      result => {\r\n        this.addressIds = result.address;\r\n        \r\n        this.getAddressType();\r\n        this.getCountry();\r\n        this.getCitiesOfCountryId(this.addressIds.countryId);\r\n        this.getDistrictsOfCityId(this.addressIds.cityId);\r\n        this.createForm();\r\n      }\r\n    );\r\n  }\r\n\r\n  getAddressType() {\r\n    this.data.AgetAddressTypes().subscribe(\r\n      result => {\r\n        this.addressTypes = result.addressTypes;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCountry() {\r\n    this.data.AgetCountries().subscribe(\r\n      result => {\r\n        this.countries = result.countries;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCitiesOfCountryId(id: number) {\r\n    this.data.AgetCitiesOfCountryId(id).subscribe(\r\n      result => {\r\n        this.cities = result.cities;\r\n      }\r\n    );\r\n  }\r\n\r\n  getDistrictsOfCityId(id: number) {\r\n    this.data.AgetDistrictOfCityId(id).subscribe(\r\n      result => {\r\n        this.districts = result.districts;\r\n      }\r\n    );\r\n  }\r\n\r\n  changeCountry(id) {\r\n    this.addressIds = null;\r\n    this.districts = null;\r\n    this.getCitiesOfCountryId(id);\r\n    this.formUsers.patchValue({\r\n      cityId: null,\r\n    });\r\n  }\r\n\r\n  changeCity(id: number) {\r\n    if(id != null)\r\n      this.getDistrictsOfCityId(id);\r\n    this.formUsers.patchValue({\r\n      districtId: null,\r\n      street: \"\"\r\n    });\r\n  }\r\n\r\n  actionAddress() {\r\n    const addressType = this.addressTypes.find(\r\n      obj => obj.id === this.formUsers.value.addressTypeId\r\n    );\r\n    const district = this.districts.find(\r\n      obj => obj.id === this.formUsers.value.districtId\r\n    );\r\n    const city: any  = this.cities.find(\r\n      obj => obj.id === this.formUsers.value.cityId\r\n    );\r\n    const country: Country = this.countries.find(\r\n      obj => obj.id === this.formUsers.value.countryId\r\n    );\r\n\r\n    if(this.modalType === 'edit') {\r\n      this.data.AupdateAddressFromId(this.modalUDId, this.formUsers.value).subscribe(\r\n        () => {\r\n          if(district && city && country)\r\n            this._addressDetail.emit({ \r\n              modalType: this.modalType,\r\n              addressInfo: {\r\n                id: this.formUsers.value.id,\r\n                street: this.formUsers.value.street,\r\n                addressType: addressType.name,\r\n                district: district.name,\r\n                city: city.name,\r\n                country: country.name\r\n              }\r\n            });\r\n        },\r\n        err => console.log(\"error subscribe: \" + err),\r\n        () => console.log(\"not error!\")\r\n      ); \r\n    }\r\n    else if( this.modalType === 'add' ) {\r\n      this.data.AaddAddress(this.userId, this.formUsers.value).subscribe(\r\n        result => {\r\n          let addressId = result.address.id;\r\n          if(district && city && country)\r\n            this._addressDetail.emit({ \r\n              modalType: this.modalType,\r\n              addressInfo: {\r\n                id: addressId,\r\n                street: this.formUsers.value.street,\r\n                addressType: addressType.name,\r\n                district: district.name,\r\n                city: city.name,\r\n                country: country.name\r\n              }\r\n            });\r\n        },\r\n        err => console.log(\"loi subscribe: \" + err),\r\n        () => {\r\n          \r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  open(content) {\r\n\r\n    //reset form when user click add from time of two.\r\n    if(this.modalType === 'add'){\r\n      this.addressIds = new Address();\r\n      this.createForm();\r\n    }\r\n\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', backdrop: \"static\" }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n\r\n      this.actionAddress();\r\n\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Edit Address Infomation</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n  \\r\\n      <form [formGroup]=\\\"formUsers\\\" (ngSubmit)=\\\"c('Save click')\\\" autocomplete=\\\"off\\\">\\r\\n  \\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">Address type:</div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <select formControlName=\\\"addressTypeId\\\" class=\\\"form-control\\\">\\r\\n              <option value=\\\"null\\\"> -- select address type -- </option>\\r\\n              <option *ngFor=\\\"let type of addressTypes\\\" [ngValue]=\\\"type.id\\\">\\r\\n                {{ type.name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">Country:</div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <select (ngModelChange)=\\\"changeCountry($event)\\\" formControlName=\\\"countryId\\\" class=\\\"form-control\\\">\\r\\n              <option value=\\\"null\\\"> -- select Country -- </option>\\r\\n              <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.id\\\">\\r\\n                {{ country.name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">City:</div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <select formControlName=\\\"cityId\\\" (ngModelChange)=\\\"changeCity($event)\\\" class=\\\"form-control\\\">\\r\\n              <option [ngValue]=\\\"null\\\"> -- select City -- </option>\\r\\n              <option *ngFor=\\\"let city of cities\\\" [ngValue]=\\\"city.id\\\">\\r\\n                {{ city.name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">District:</div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <select formControlName=\\\"districtId\\\" class=\\\"form-control\\\">\\r\\n              <option [value]=\\\"null\\\"> -- select District -- </option>\\r\\n              <option *ngFor=\\\"let district of districts\\\" [ngValue]=\\\"district.id\\\">\\r\\n                {{ district.name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">Street:</div>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"street\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"formUsers.invalid\\\">\\r\\n            {{ modalType === 'edit' ? 'Save' : 'Add' }}\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <a (click)=\\\"open(content)\\\">\\r\\n      <i class=\\\"fa fa-pencil-square-o\\\" style=\\\"color: blue\\\"></i>{{ modalType === 'edit' ? 'Edit' : 'Add' }} </a>\"","module.exports = \"input.ng-invalid{\\r\\n    border: 1px solid red;\\r\\n    color: red;\\r\\n}\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Edit User Infomation</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n  \\n      <form [formGroup]=\\\"formUser\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  \\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-sm-3\\\">Username:</div>\\n          <div class=\\\"col-sm-9\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"username\\\">\\n            <app-validate [control]=\\\"formUser.controls.username\\\" [namecontrol]=\\\"Username\\\"></app-validate>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-sm-3\\\">Password:</div>\\n            <div class=\\\"col-sm-9\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"password\\\">\\n              <app-validate [control]=\\\"formUser.controls.password\\\" [namecontrol]=\\\"password\\\"></app-validate>\\n            </div>\\n          </div>\\n  \\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"formUser.invalid\\\">Save</button> -->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"formUser.invalid\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  \\n  \\n  </ng-template>\\n  <a (click)=\\\"open(content)\\\">\\n    <i class=\\\"fa fa-pencil-square-o\\\" style=\\\"color: blue\\\"></i>Edit </a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../../services/users/user.service';\nimport { UserData, User } from '../../../models/user';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-detail-modal',\n  templateUrl: './user-detail.modal.html',\n  styleUrls: ['./user-detail.modal.css']\n})\nexport class UserDetailModal implements OnInit {\n\n  @Input('idUser') idUser;\n  userData: UserData;\n  user: User;\n  closeResult: string;\n  formUser: FormGroup;\n  userName: string;\n  passWord: string;\n\n  constructor( private router: Router, private modalService: NgbModal, private userService: UserService, private fb: FormBuilder ) { }\n\n  ngOnInit() {\n    this.getUserFromId();\n  }\n\n  createForm() {\n    this.formUser = this.fb.group({\n      username: [this.user.name, [\n        Validators.required,\n        Validators.minLength(2)\n      ]],\n      password: [this.user.password, [\n        Validators.required,\n        Validators.minLength(5)\n      ]]\n    });\n  }\n\n  getUserFromId() {\n    this.userService.getUserFromId(this.idUser).subscribe(data => {\n      this.userData = data;\n      this.user = this.userData.users[0];\n      this.createForm();\n    })\n  }\n\n  onSubmit() {\n    return this.userService.updateUser(this.idUser, this.formUser.get('username').value, this.formUser.get('password').value).subscribe(data => \n      window.location.reload())\n  }\n\n  open(content) {\n\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', backdrop: \"static\" }).result.then((result) => {\n      this.createForm();\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.createForm();\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n","module.exports = \".pagenotfound h1{\\r\\n    color: red;\\r\\n}\\r\\n.pagenotfound{\\r\\n    background-color: white;\\r\\n    border-radius: 5px;\\r\\n    height: 100px;  \\r\\n}\"","module.exports = \"<div class=\\\"pagenotfound\\\">\\r\\n  <h1>PAGE NOT FOUND!</h1>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.css']\r\n})\r\nexport class PagenotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"nav flex-column\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">\\r\\n            <i class=\\\"fa fa-home\\\"></i> HOME</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"authentication\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/user\\\" routerLinkActive=\\\"active\\\">\\r\\n            <i class=\\\"fa fa-group\\\"></i> USER MANAGEMENT</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/detail/{{idUser}}\\\" routerLinkActive=\\\"active\\\">\\r\\n            <i class=\\\"fa fa-address-book\\\"></i> PERSONAL INFORMATION</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/contact\\\" routerLinkActive=\\\"active\\\">\\r\\n            <i class=\\\"fa fa-phone\\\"></i> CONTACT</a>\\r\\n    </li>\\r\\n</nav>\"","module.exports = \".active {\\n  color: black;\\n  background-color: #F6F7F9;\\n  width: 300px;\\n  border-radius: 4px;\\n  font-weight: bold; }\\n\\n.nav-link {\\n  margin-bottom: 2px;\\n  color: black; }\\n\\n.nav-link :hover {\\n    background-color: #F6F7F9;\\n    width: 300px;\\n    border-radius: 4px; }\\n\\n.nav-item {\\n  display: block; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  // authentication: boolean;\r\n  // abc=AppComponent.authentication;\r\n  idUser: number;\r\n  // getAuthentication(){\r\n  //   return AppComponent.authentication;\r\n  // }\r\n\r\n  authentication: boolean;\r\n\r\n  constructor(private jwt: JwtHelperService) { \r\n    // this.getAuthentication();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getClaimOfToken();\r\n  }\r\n\r\n  getClaimOfToken() {\r\n    let decodedToken = this.jwt.decodeToken(localStorage.getItem(\"token\"));\r\n    this.idUser = decodedToken.userId;\r\n    // console.log(decodedToken.permissionCount);\r\n    localStorage.setItem(\"permissionCount\", decodedToken.permissionCount);\r\n\r\n    if(decodedToken.permissionCount == 3)\r\n    {\r\n      this.authentication = true;\r\n    }\r\n    else{\r\n      this.authentication = false;\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n}\r\n","module.exports = \"<div class=\\\"user-detail\\\" *ngIf=\\\"isBoolean; else user\\\">\\r\\n    <p>USER DETAIL</p>\\r\\n    <div class=\\\"\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"inputId\\\" class=\\\"col-sm-3\\\">Id</label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                {{ userAddresses?.user.id }}\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                <label for=\\\"inputUserName\\\">Username</label>\\r\\n                <br>\\r\\n                <br>\\r\\n                <label for=\\\"inputPassword\\\">Password</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                {{ userAddresses?.user.name }}\\r\\n                <br>\\r\\n                <br> {{ userAddresses?.user.password }}\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-3 btn-edit\\\" *ngIf=\\\"userAddresses?.user\\\">\\r\\n                <app-user-detail-modal [idUser]=\\\"userAddresses.user.id\\\"></app-user-detail-modal>\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <div class=\\\"add-address\\\">\\r\\n            <!-- <a [hidden]=\\\"userAddresses?.addresses.length == 2\\\" (click)=\\\"addAddress()\\\">+ Add address</a> -->\\r\\n            <ngbd-modal-basic [modalType]=\\\"'add'\\\" [userId]=\\\"userAddresses?.user.id\\\" [hidden]=\\\"userAddresses?.addresses.length == 2\\\" (_addressDetail)=\\\"actionAddresses($event)\\\"></ngbd-modal-basic>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let address of userAddresses?.addresses\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"inputPassword\\\" class=\\\"col-sm-3\\\">{{ address?.addressType }} Address</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    {{ address?.street + \\\"- \\\" + address?.district + \\\"- \\\" + address?.city + \\\"- \\\" + address?.country }}\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3 action\\\">\\r\\n                    <!-- <ngbd-modal-basic [modalUDId]=\\\"address.id\\\"></ngbd-modal-basic> -->\\r\\n                    <ngbd-modal-basic [modalType]=\\\"'edit'\\\" [modalUDId]=\\\"address.id\\\" (_addressDetail)=\\\"actionAddresses($event)\\\"></ngbd-modal-basic>\\r\\n                    <a (click)=\\\"deleteAddress(address.id)\\\" class=\\\"btn-delete\\\">\\r\\n                        <i class=\\\"fa fa-times\\\" style=\\\"color: red\\\"></i>Delete</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #user>\\r\\n    <div class=\\\"user-detail\\\">\\r\\n        <p>USER DETAIL</p>\\r\\n        <div class=\\\"\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"inputId\\\" class=\\\"col-sm-3\\\">Id</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    {{ userData?.id }}\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-3\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n                    <label for=\\\"inputUserName\\\">Username</label>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <label for=\\\"inputPassword\\\">Password</label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    {{ userData?.name }}\\r\\n                    <br>\\r\\n                    <br> {{ userData?.password }}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \".user-detail {\\n  background-color: white;\\n  border-radius: 5px;\\n  padding: 20px; }\\n  .user-detail p {\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold; }\\n  label {\\n  font-weight: bold; }\\n  .btn-edit {\\n  cursor: pointer;\\n  color: blue;\\n  display: flex;\\n  align-items: center; }\\n  .btn-edit :hover {\\n    text-decoration: underline; }\\n  .action a {\\n  border-left: 1px solid gray;\\n  padding-left: 5px;\\n  cursor: pointer;\\n  color: red; }\\n  .action a :hover {\\n    text-decoration: underline; }\\n  .action ngbd-modal-basic {\\n  cursor: pointer;\\n  color: blue; }\\n  .action ngbd-modal-basic :hover {\\n    text-decoration: underline; }\\n  .add-address {\\n  cursor: pointer;\\n  color: blue; }\\n  .add-address :hover {\\n    text-decoration: underline; }\\n  .form-group:hover {\\n  background-color: #F6F7F9;\\n  border-radius: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserAddressesDetail, AddressDetail } from '../../models/address';\r\nimport { User } from '../../models/user';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddressService } from '../../services/address/address.service';\r\nimport { UserService } from '../../services/users/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.scss']\r\n})\r\n\r\nexport class UserDetailComponent implements OnInit {\r\n  userAddresses: UserAddressesDetail;\r\n  userData: User;\r\n  id: number;\r\n  isBoolean: boolean;\r\n\r\n  constructor(private addressService: AddressService, private userService: UserService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    if(localStorage.getItem(\"permissionCount\") == \"3\")\r\n    {\r\n      this.isBoolean = true;\r\n      this.getUserAddresses();\r\n    }\r\n    else {\r\n      this.isBoolean = false;\r\n      this.getUserFromId();\r\n    }\r\n  }\r\n\r\n  getUserAddresses() {\r\n    this.id = +this.route.snapshot.paramMap.get('id');\r\n    this.addressService.getUserAddressesOfUserId(this.id).subscribe(\r\n      data => {\r\n        // console.log(data);\r\n        this.userAddresses = data.pop();\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserFromId() {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.userService.getUserFromId(id).subscribe(\r\n      result => {\r\n        console.log(\"aad\");\r\n        console.log(result.users[0]);\r\n        // this.userAddresses = new UserData();\r\n        this.userData = result.users[0];\r\n      }\r\n    );\r\n  }\r\n\r\n  actionAddresses(info: any) {\r\n\r\n    if (info.modalType === 'edit') {\r\n      let addresses = [];\r\n      this.userAddresses.addresses.map(\r\n        obj => {\r\n          if (obj.id === info.addressInfo.id) {\r\n            addresses.push(info.addressInfo);\r\n          }\r\n          else\r\n            addresses.push(obj);\r\n        }\r\n      );\r\n      this.userAddresses.addresses = addresses;\r\n    }\r\n    else if (info.modalType === 'add') {\r\n      this.userAddresses.addresses.push(info.addressInfo);\r\n    }\r\n  }\r\n\r\n  deleteAddress(id: number) {\r\n    if (this.userAddresses.user.address2 === id) {\r\n      this.userAddresses.user.address2 = null;\r\n    }\r\n    if (this.userAddresses.user.address1 === id) {\r\n      this.userAddresses.user.address1 = null;\r\n    }\r\n\r\n    this.addressService.AdeleteAddressFromId(id).subscribe(\r\n      () => {\r\n        this.userService.AupdateUser(this.userAddresses.user.id, this.userAddresses.user).subscribe();\r\n\r\n        this.userAddresses.addresses = this.userAddresses.addresses.filter(\r\n          obj => obj.id !== id\r\n        );\r\n\r\n\r\n      },\r\n      err => console.log(\"error of subscribe AdeleteAddressFromId(): \" + err),\r\n      () => console.log(\"delete address success!\")\r\n    );\r\n  }\r\n\r\n  // getUserDetail() {\r\n  //   const id = +this.route.snapshot.paramMap.get('id');\r\n  //   return this.addressService.getUserAddressesFromId(id).subscribe(data => {\r\n  //     if (Object.keys(data).length > 0) {\r\n  //       this.addressesDetail = data[0];\r\n  //       this.myId = id;\r\n  //       this.myUser = this.addressesDetail.user.name;\r\n  //       this.myPass = this.addressesDetail.user.password;\r\n  //       this.addresses = this.addressesDetail.addresses;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // getAddressFromId(id: number, addresstype: string) {\r\n  //   this.addressType = addresstype;\r\n  //   return this.addressService.getAddressFromId(id).subscribe(data => {\r\n  //     this.detail_address = false;\r\n  //     this.addressData = data['address'][0];\r\n  //     this.idCountry = this.addressData.countryId;\r\n  //     this.idCity = this.addressData.cityId;\r\n  //     this.idDistrict = this.addressData.districtId;\r\n  //     this.street = this.addressData.street;\r\n  //     this.idAddress = this.addressData.id;\r\n  //     this.addressTypeId = this.addressData.addressTypeId;\r\n  //     this.getCountries();\r\n  //     this.getCitiesFromId(this.addressData.countryId);\r\n  //     this.getDistrictsFromId(this.addressData.cityId);\r\n  //   });\r\n  // }\r\n\r\n  // updateAddressFromId() {\r\n  //   if (this.idCountry != 0 && this.idCity != 0 && this.idDistrict != 0) {\r\n  //     let address: Address = new Address(+this.addressTypeId, +this.idCountry, +this.idCity, +this.idDistrict, this.street);\r\n  //     console.log(address);\r\n  //     this.addressService.updateAddressFromId(+this.idAddress, address).subscribe(data => {\r\n  //       this.detail_address = true;\r\n  //     });\r\n  //   }\r\n  //   else\r\n  //   {\r\n  //     this.message = \"The information is invalid!\";\r\n  //   }\r\n  // }\r\n\r\n  // getCountries() {\r\n  //   return this.addressService.getCountries().subscribe(data => {\r\n  //     this.countryData = data;\r\n  //   });\r\n  // }\r\n\r\n  // getCitiesFromId(id: number) {\r\n  //   return this.addressService.getCitiesFromId(id).subscribe(data => {\r\n  //     this.cityData = data;\r\n  //     this.idCity = 0;\r\n  //     this.idDistrict = 0;\r\n  //     this.getDistrictsFromId(this.idCity);\r\n  //   });\r\n  // }\r\n\r\n  // getDistrictsFromId(id: number) {\r\n  //   return this.addressService.getDistrictsFromId(id).subscribe(data => {\r\n  //     this.districtData = data;\r\n  //   });\r\n  // }\r\n\r\n  // updateUser() {\r\n  //   const id = +this.route.snapshot.paramMap.get('id');\r\n  //   return this.userService.updateUser(id, this.myUser, this.myPass).subscribe(data =>\r\n  //     this.router.navigate(['main']));\r\n  // }\r\n\r\n  // editUser() {\r\n  //   this.detail_user = false;\r\n  // }\r\n\r\n  // cancel() {\r\n  //   this.detail_address = true;\r\n  //   this.detail_user = true;\r\n  //   // this.location.back();\r\n  // }\r\n}\r\n","module.exports = \"<div class=\\\"search-container\\\">\\r\\n        <p>USERS LIST</p>\\r\\n        <form>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Search user\\\" [(ngModel)]=\\\"searchValue\\\" name=\\\"search\\\" (ngModelChange)=\\\"AresetCurrentPage()\\\" >\\r\\n            <button type=\\\"submit\\\" (click)=\\\"AgetSearchValue()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"users-list\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n                <th>Password</th>\\r\\n                <th>Detail</th>\\r\\n                <th>Delete</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let x of userdata.users | paginate: {itemsPerPage: 4, currentPage: p, totalItems: totalItems}\\\">\\r\\n                <td>{{ x.id }}</td>\\r\\n                <td>{{ x.name }}</td>\\r\\n                <td>{{ x.password }}</td>\\r\\n                <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" routerLink=\\\"/detail/{{ x.id }}\\\">Edit</button>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser(x.id)\\\">Delete</button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"pagination\\\">\\r\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\r\\n    </div>\\r\\n    \\r\\n    <app-user-address></app-user-address>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".status {\\n  color: red; }\\n\\n.nav-link {\\n  float: left; }\\n\\n.nav-link :hover:not(.active) {\\n    background-color: #ddd;\\n    border-radius: 5px; }\\n\\n.active {\\n  background-color: #007BFF;\\n  color: white;\\n  border-radius: 5px; }\\n\\n.btn {\\n  display: block;\\n  clear: both; }\\n\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red; }\\n\\n.modal-body input {\\n  width: 100%; }\\n\\n.users-list {\\n  background-color: white;\\n  border-radius: 5px;\\n  clear: both; }\\n\\n.btn {\\n  margin: 4px;\\n  width: 100px; }\\n\\n.pagination {\\n  display: flex;\\n  justify-content: center; }\\n\\n.search-container {\\n  background-color: white;\\n  border-radius: 5px;\\n  margin-bottom: 5px;\\n  padding: 5px;\\n  height: 40px; }\\n\\n.search-container p {\\n    float: left;\\n    font-size: 20px;\\n    font-weight: bold; }\\n\\n.search-container form {\\n    float: right; }\\n\\n.gender {\\n  display: flex;\\n  justify-content: center;\\n  font-weight: bold; }\\n\\n.card-left {\\n  font-weight: bold;\\n  color: black;\\n  width: 500px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../services/users/user.service';\r\nimport { UserData, User } from '../../models/user';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  userdata: UserData = new UserData();\r\n\r\n  p = 1;\r\n  totalItems: number;\r\n  totalPages : number;\r\n\r\n  searchValue: string;\r\n  \r\n  constructor(private router: Router, private userService: UserService) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n  \r\n  pageChanged(page) {\r\n    this.p = page;\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers(): void {\r\n    this.userService.getUsers(4,this.p).subscribe((data) => {\r\n      if(Object.keys(data).length > 0){\r\n        this.userdata = data;\r\n        this.totalItems = data.pagination.totalItems;\r\n        this.totalPages = Math.ceil(this.totalItems/4);\r\n      }\r\n      else\r\n      {\r\n        this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.userService.deleteUser(id).subscribe(data =>\r\n      this.getUsers());\r\n  }\r\n\r\n  AresetCurrentPage() {\r\n    this.p = 1;\r\n    this.AgetSearchValue();\r\n  }\r\n\r\n  AgetSearchValue() {\r\n    this.userService.AsearchUser(this.searchValue, 4,this.p).subscribe(\r\n      result => {\r\n        this.userdata = result;\r\n        if(result.pagination != null)\r\n          this.totalItems = result.pagination.totalItems;\r\n        else\r\n          this.totalItems = 0;\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \".label-danger{\\r\\n    color: red;\\r\\n}\"","module.exports = \"<span class=\\\"label-danger\\\" *ngIf=\\\"message\\\">{{ message }}</span>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-validate',\n  templateUrl: './validate.component.html',\n  styleUrls: ['./validate.component.css']\n})\nexport class ValidateComponent implements OnInit {\n\n  @Input() control;\n  @Input() namecontrol;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.namecontrol);\n  }\n\n  get message(){\n    for(let er in this.control.errors){\n      if(this.control.dirty){\n        return this.getErrorMessage(er, this.control.errors[er]);\n      }\n    }\n  }\n  \n  getErrorMessage(er, value){\n    // let message = {\n    //   'required' : `Vui lòng nhập ${this.namecontrol}`,\n    //   'minlength' : `${this.namecontrol} tối thiểu ${value.requiredLength} kí tự`,\n    //   'maxlength' : `${this.namecontrol} tối đa ${value.requiredLength} kí tự`,\n    //   'pattern' : `${this.namecontrol} không đúng định dạng`\n    // }\n    let message = {\n      'required' : `This is required!`,\n      'minlength' : `You must enter at least ${value.requiredLength} characters`,\n      'maxlength' : `You must enter a max ${value.requiredLength} characters`,\n      'pattern' : `You enter is invalid`\n    }\n    return message[er];\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Error } from './error';\r\nimport { User } from './user'\r\n\r\nexport class AddressData {\r\n    address: Address[];\r\n    error: Error;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class UserAddress {\r\n    user: User;\r\n    addresses: Address[];\r\n    constructor( u: User, a: Array<Address> ){\r\n        this.user = u;\r\n        this.addresses = a;\r\n    }\r\n}\r\n\r\nexport class Address {\r\n    id: number;\r\n    addressTypeId: number;\r\n    countryId: number;\r\n    cityId: number;\r\n    districtId: number;\r\n    street: string;\r\n    constructor(addresstypeid?: number, countryid?: number, cityid?: number, districtid?: number, st?: string) {\r\n        this.addressTypeId = addresstypeid;\r\n        this.countryId = countryid;\r\n        this.cityId = cityid;\r\n        this.districtId = districtid;\r\n        this.street = st;\r\n    }\r\n}\r\n\r\n\r\nexport class UserAddressesDetail {\r\n    user: User;\r\n    addresses: Array<AddressDetail>;\r\n}\r\nexport class AddressDetail {\r\n    id: number;\r\n    street: string;\r\n    addressType: string;\r\n    district: string;\r\n    city: string;\r\n    country: string;\r\n}","import { Error } from './error';\r\n\r\nexport class CityData {\r\n    cities: Cities[];\r\n    error: Error;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class Cities {\r\n    id: number;\r\n    name: string;\r\n    countryId: number;\r\n    constructor() {\r\n    }\r\n}","import { Error } from './error';\r\n\r\nexport class CountryData {\r\n    countries: Country[];\r\n    error: Error;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class Country {\r\n    id: number;\r\n    name: string;\r\n    constructor() {\r\n    }\r\n}","import { Error } from './error';\r\n\r\nexport class DistrictData {\r\n    districts: Districts[];\r\n    error: Error;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport class Districts {\r\n    id: number;\r\n    name: string;\r\n    cityId: number;\r\n    constructor() {\r\n    }\r\n}","import { Error } from './error';\r\nimport { Pagination } from './pagination'\r\n\r\nexport class UserData {\r\n    users: User[];\r\n    error: Error;\r\n    pagination: Pagination;\r\n}\r\n\r\nexport class User {\r\n    id: number;\r\n    name: string;\r\n    password: string;\r\n    address1: number;\r\n    address2: number;\r\n    constructor( name: string = \"\", password: string = \"\") {\r\n        this.name = name;\r\n        this.password = password;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { User, UserData } from '../../models/user';\r\nimport { UserAddress, Address, UserAddressesDetail } from '../../models/address';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { CountryData } from '../../models/country';\r\nimport { CityData } from '../../models/city';\r\nimport { DistrictData } from '../../models/district';\r\nimport { UserAddress1 } from '../../models/userAddress';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  private apiCountries = 'http://localhost:5000/api/countries';\r\n  private apiCitiesOfCountryId = 'http://localhost:5000/api/cities/country';\r\n  private apiDistrictsOfCityId = 'http://localhost:5000/api/districts/city';\r\n  private apiUserAddresses = 'http://localhost:5000/api/addresses';\r\n  private apiAddressType = 'http://localhost:5000/api/addresstype'\r\n  \r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getUserAddresses(size: number, current: number) {\r\n    let options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n      })\r\n    };\r\n    let url = `${this.apiUserAddresses}/page?size=${size}&current=${current}`;\r\n    return this.http.get(url);\r\n  }\r\n  checkValiToken() {\r\n    let options = {\r\n      headers: new HttpHeaders( { \r\n        'Authorization': 'Bearer '+ localStorage.getItem(\"token\") \r\n      } )};\r\n    return this.http.get(this.apiCountries, options);\r\n  }\r\n\r\n  createUserAddress (u: User, a: Array<Address>) {\r\n    let useradd: UserAddress = new UserAddress( u, a );\r\n    let options = {headers: new HttpHeaders( { 'Content-Type': 'application/json', 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    return this.http.post(this.apiUserAddresses, useradd, options).pipe(\r\n      // map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  getUserAddressesOfUserId(id: number): Observable<UserAddressesDetail[]> {\r\n    const url= `${this.apiUserAddresses}/user/${id}`;\r\n    return this.http.get<UserAddressesDetail[]>(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of getUserAddressesFromId(id): \" + err)\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  AgetAddressFromId(id: number) {\r\n    const url = `${this.apiUserAddresses}/${id}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AgetAddressFromId(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  AgetAddressTypes() {\r\n    const url = `${this.apiAddressType}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AgetAddressType(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  AgetCountries() {\r\n    return this.http.get(this.apiCountries).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AgetCountries(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  AgetCitiesOfCountryId(id: number) {\r\n    const url = `${this.apiCitiesOfCountryId}/${id}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AgetCitiesOfCountryId(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  AgetDistrictOfCityId(id: number) {\r\n    const url = `${this.apiDistrictsOfCityId}/${id}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AgetDistrictOfCityId(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  AupdateAddressFromId(id: number, address: Address) {\r\n    const url = `${this.apiUserAddresses}/${id}`\r\n    return this.http.put(url, address).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of this.AupdateAddressFromId(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  AdeleteAddressFromId(id: number) {\r\n    const url = `${this.apiUserAddresses}/${id}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AdeleteAddressFromId(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  AaddAddress(id: number, address: Address) {\r\n    const url = `${this.apiUserAddresses}/user/${id}`;\r\n    return this.http.post(url, address).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AaddAddress(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getAddressFromId(id: number) {\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= (this.apiUserAddresses) + '/' + (id);\r\n    return this.http.get(url, options).pipe(\r\n      // map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  updateAddressFromId(id: number, address) {\r\n    let options = {headers: new HttpHeaders( { 'Content-Type': 'application/json', 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= (this.apiUserAddresses) + '/' + (id);\r\n    return this.http.put(url, address, options);\r\n  }\r\n\r\n  getCountries() {\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    return this.http.get<CountryData>(this.apiCountries, options).pipe(\r\n      // map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  getCitiesFromId(id: number) {\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= this.apiCitiesOfCountryId + '/' + id;\r\n    return this.http.get<CityData>(url, options).pipe(\r\n      // map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  getDistrictsFromId(id: number) {\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= this.apiDistrictsOfCityId + '/' + id;\r\n    return this.http.get<DistrictData>(url, options).pipe(\r\n      // map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { User,UserData } from '../../models/user';\r\nimport { Router } from '@angular/router';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { interpolate } from '@angular/core/src/view';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  userdata: UserData;\r\n  private apiUrl = 'http://localhost:5000/api/users';\r\n  private apiLogin = 'http://localhost:5000/api/token';\r\n  \r\n\r\n  \r\n  constructor( private http: HttpClient, private router: Router ) {    }\r\n  \r\n  AupdateUser(id: number, user: User) {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.put(url, user).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AupdateUser(): \" + err);\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  loginUser(user) {\r\n    //Gửi về server cần có Headers và RequestOptions\r\n    //C1:\r\n    //let header1 = new Headers( { 'Content-Type': 'application/json' } );\r\n    //let options = new RequestOptions({headers: header1});\r\n    //C2:\r\n    let options = {headers: new HttpHeaders( { 'Content-Type': 'application/json' } )};\r\n    //Sử dụng post truyền dữ liệu xuống Server, tham số của post cần: link api, tài khoản login và options\r\n    return this.http.post<UserData>(this.apiLogin, user, options).pipe(\r\n    //Nếu có kết quả sẽ map kết quả thành json, ngược lại sẽ xuất lỗi\r\n          // map ( Response => JSON.stringify(Response) ),\r\n          catchError(\r\n            error => {\r\n              console.log(\"Loi login of user service: \" + error);\r\n              return of(error);\r\n            }\r\n          ) );\r\n  }\r\n\r\n  getUsers(pS: number, pN: number){\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= (this.apiUrl) + '/page?size=' + pS + '&current=' + pN ;\r\n    return this.http.get<UserData>(url, options).pipe(\r\n      // tap ( Response => Response ),\r\n      catchError(error) );\r\n  }\r\n\r\n  getUserFromId(id: number){\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= (this.apiUrl) + '/' + id;\r\n    return this.http.get<UserData>(url, options).pipe(\r\n      catchError(error) );\r\n  }\r\n\r\n  deleteUser (id: number) {\r\n    let options = {headers: new HttpHeaders( { 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    const url= (this.apiUrl) + '/' + (id);\r\n    return this.http.delete(url, options).pipe(\r\n      map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  updateUser (id: number, username: string, pass: string) {\r\n    let user: User = new User( username, pass);\r\n    const url= (this.apiUrl) + '/' + (id);\r\n    let options = {headers: new HttpHeaders( { 'Content-Type': 'application/json', 'Authorization': 'Bearer '+ localStorage.getItem(\"token\") } )};\r\n    console.log(user);\r\n    return this.http.put(url, user, options).pipe(\r\n      map ( Response => JSON.stringify(Response) ),\r\n      catchError(error) );\r\n  }\r\n\r\n  AsearchUser(searchValue: string, size: number, current: number) {\r\n    const url = `${this.apiUrl}/page?search=${searchValue}&size=${size}&current=${current}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(\r\n        err => {\r\n          console.log(\"error of AsearchUser(): \" + JSON.stringify(err));\r\n          return of(err);\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}